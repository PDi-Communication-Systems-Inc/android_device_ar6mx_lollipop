# Android fstab file.
#<src>                                                  <mnt_point>         <type>    <mnt_flags and options>                       <fs_mgr_flags>
# The filesystem that contains the filesystem checker binary (typically /system) cannot
# specify MF_CHECK, and must come before any filesystems that do specify MF_CHECK

# Common options :
# sync/async - All I/O to the file system should be done (a)synchronously.
# auto - The filesystem can be mounted automatically (at bootup, or when mount is passed the -a option). This is really unnecessary as this is the default action of mount -a anyway.
# noauto - The filesystem will NOT be automatically mounted at startup, or when mount passed -a. You must explicitly mount the filesystem.
# dev/nodev - Interpret/Do not interpret character or block special devices on the file system.
# exec / noexec - Permit/Prevent the execution of binaries from the filesystem.
# suid/nosuid - Permit/Block the operation of suid, and sgid bits.
# ro - Mount read-only.
# rw - Mount read-write.
# user - Permit any user to mount the filesystem. This automatically implies noexec, nosuid,nodev unless overridden.
# nouser - Only permit root to mount the filesystem. This is also a default setting.
# defaults - Use default settings. Equivalent to rw, suid, dev, exec, auto, nouser, async.
# _netdev - this is a network device, mount it after bringing up the network. Only valid with fstype nfs.
# nodiratime option disables the writing of file access times only for directories while other files still get access times written.
# noatime option fully disables writing file access times to the drive every time you read a file
# nomblk_io_submit -- not sure on this one, probably prevents writing multiple blocks to storage at once
# noauto_da_alloc -- do not detect the replace-via-rename/truncate patterns and as such do not force netw data blocks to disk on delayed allocation requests
# errors -- remount as read-only (remount-ro), keep going (continue) or panic and halt machine (panic)

# source code refernce is myandroid/system/core/fs_mgr/fs_mgr_fstab.c

# I can't believe the order here actually matters, actually I don't think it does the problems I had stimmed from trying to use mfgtool
# to send a sparse userdata and cache images to their respective partitions -- mrobbeloth 10-14-2016

# For handling devices plugged into sd card or usb port
/devices/soc0/soc.1/2100000.aips-bus/2198000.usdhc/mmc_host* /mnt/media_rw/extsd vfat defaults voldmanaged=extsd:auto
/devices/soc0/soc.1/2100000.aips-bus/2184000.usb/ci_hdrc.0* /mnt/media_rw/udisk1 vfat defaults voldmanaged=udisk1:auto
/devices/soc0/soc.1/2100000.aips-bus/2184200.usb/ci_hdrc.1* /mnt/media_rw/udisk vfat defaults voldmanaged=udisk:auto

# Logical partitions within extended partition (mmcblk3p3)
/dev/block/mmcblk3p5    /system      ext4    ro                                                                               wait

# Final primary partition ... data is the partition for user data (e.g., facility and patients)
/dev/block/mmcblk3p4    /data        ext4    nosuid,nodev,nodiratime,noatime,nomblk_io_submit,noauto_da_alloc,errors=panic    wait,encryptable=footer

# second and third logical paritions  within mmcblk3p3
/dev/block/mmcblk3p6    /cache       ext4    nosuid,nodev,nomblk_io_submit                                                    wait
/dev/block/mmcblk3p7    /device      ext4    ro,nosuid,nodev                                                                  wait

# First primary partition
/dev/block/mmcblk3p1    /boot        emmc    defaults                                                                         defaults

# Second primary partition -- always updated after ota updates via install-recovery.sh script
/dev/block/mmcblk3p2    /recovery    emmc    defaults                                                                         defaults

# Final logical partition within mmcblk3p3
/dev/block/mmcblk3p8    /misc        emmc    defaults                                                                         defaults
